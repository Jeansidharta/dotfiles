#!/bin/bash

SERVICE_TYPE=$1
SERVICE_NAME=$2

if [ "$(id -u)" = "0" ]; then
	echo "Do not run this program as root."
	exit -1
fi

function doesRequireRoot {
	if [ "$SERVICE_TYPE" = "service" ] || [ "$SERVICE_TYPE" = "predify-root" ]; then
		return 0
	else
		return 1
	fi
}

case $SERVICE_TYPE in
	service)
		DEST=/var/service
	;;
	x)
		DEST=$XDG_CONFIG_HOME/runit/onXSession
	;;
	boot)
		DEST=$XDG_CONFIG_HOME/runit/onBoot
	;;
	login)
		DEST=$XDG_CONFIG_HOME/runit/onLogin
	;;
	demand)
		DEST=$XDG_CONFIG_HOME/runit/onDemand
	;;
	predify-root)
		DEST=$XDG_CONFIG_HOME/runit/onDemandPredifyRoot
	;;
	*)
		echo -e "First arg must be:\n\t- service\n\t- x\n\t- boot\n\t- login\n\t- demand\n\t- predify-root"
	;;
esac

if [ -z "$SERVICE_NAME" ]; then
	echo "You must provide a service name as second argument"
	exit -1
fi

if [ "$SERVICE_TYPE" = "service" ]; then
	SERVICE_PATH=/etc/sv/$SERVICE_NAME
else
	SERVICE_PATH=$XDG_CONFIG_HOME/runit/services/$SERVICE_NAME
fi

if [[ ! -d "$SERVICE_PATH" ]]; then
	echo "Service does not exist, or is not a directory!"
	exit -1
fi

if doesRequireRoot; then
	SERVICE_PID=$(sudo test -r "$SERVICE_PATH/supervise/pid" && sudo cat $SERVICE_PATH/supervise/pid)
else
	SERVICE_PID=$(test -r "$SERVICE_PATH/supervise/pid" && cat $SERVICE_PATH/supervise/pid)
fi

if [[ -n "$SERVICE_PID" ]]; then
	echo "Service is already running. Is it already linked?"
	exit -1
fi

if [[ -e $DEST/$SERVICE_NAME ]]; then
	if [[ ! -L "$DEST/$SERVICE_NAME" ]]; then
		echo "Service already exists in destination, but is not a link"
		exit -1
	fi
	echo "Service is already linked in destination, but is not running"
	exit -1
fi

if doesRequireRoot; then
	COMMAND="sudo ln"
else
	COMMAND="ln"
fi

$COMMAND -s $SERVICE_PATH $DEST
